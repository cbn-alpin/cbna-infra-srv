# Set your configuration in borgmatic.yml : cp borgmatic.sample.conf borgmatic.yml
# Do not forget to set secure permissions on this file as well as on any script listed in hooks section:
# chmod 0700 borgmatic.yml
# Where to look for files to backup, and where to store those backups. See
# https://borgbackup.readthedocs.io/en/stable/quickstart.html and
# https://borgbackup.readthedocs.io/en/stable/usage.html#borg-create for details.
source_directories:
  - /mnt/source/etc
  - /mnt/source/home
  - /mnt/source/opt
  - /mnt/source/root
  - /mnt/source/usr/local
one_file_system: true
read_special: true
files_cache: ctime,size,inode
repositories:
  - path: /mnt/borg-repository
    label: local
  - path: ssh://<backup-user>@<bkp-server-private-ip>:<bkp-srv-ssh-port>/path/to/repo/on/bkp/server/
    label: <bkp-server-name>-srv
exclude_patterns:
  - /mnt/source/home/admin/docker/borgmatic/data/
  # Do not exclude this path  "- /mnt/source/root/.borgmatic/" with database backup.
  - /mnt/source/root/.config/borg
  - /mnt/source/root/.config/borgmatic
  - /mnt/source/*/.cache/
exclude_caches: true
exclude_if_present: 
  - .nobackup

lock_wait: 5
temporary_directory: /tmp
compression: zstd,15
archive_name_format: '<instance>-srv-{now}'


keep_hourly: 0
keep_daily: 7
keep_weekly: 4
keep_monthly: 6
keep_yearly: 3
prefix: '<instance>-srv-'

checks:
  - repository
  - archives
check_last: 3

postgresql_databases:
  # Database name (required if using this hook). Or "all" to dump all databases on the host.
  # Note that using this database hook implicitly enables both read_special and one_file_system (see
  # above) to support dump and restore streaming.
  - name: geonature2db
    # Database hostname to connect to. Defaults to connecting via local Unix socket.
    # In Docker container, use host IP (gateway).
    hostname: 172.18.0.1
    # Port to connect to. Defaults to 5432.
    port: 5432
    # Username with which to connect to the database. Defaults to the username of the current user.
    username: geonatadmin
    # Password with which to connect to the database. Omitting a password will only work if PostgreSQL
    # is configured to trust the configured username without a password, or you create a ~/.pgpass file.
    password: <db-user-pwd>
    # Database dump output format. One of "plain", "custom", "directory", or "tar".
    # Defaults to "custom" (unlike raw pg_dump). See pg_dump documentation for details.
    # Note that format is ignored when the database name is "all".
    format: directory
    # Additional pg_dump/pg_dumpall options to pass directly to the dump command, without performing
    # any validation on them. See pg_dump documentation for details.
    options: "--compress 9 --jobs=4"
  - name: gnatlas
    hostname: 172.18.0.1
    port: 5432
    username: geonatatlas
    password: <db-user-pwd>
    format: tar

before_everything:
  - "/usr/local/bin/telegram-send \"ðŸ‘· Borgmatic ${HOSTNAME}: starting a backup job at `date` !\""
before_backup:
  - ping -q -c 1 10.0.1.10 > /dev/null || exit 75
after_everything:
  - "/usr/local/bin/telegram-send \"âœ… Borgmatic ${HOSTNAME}: backup created at `date` ; size $(du --human-readable --null --summarize /mnt/borg-repository/ |cut --fields 1) !\""
on_error:
  - "/usr/local/bin/telegram-send \"ðŸ”¥ Borgmatic ${HOSTNAME}: ERROR while creating a backup at `date` !\""
