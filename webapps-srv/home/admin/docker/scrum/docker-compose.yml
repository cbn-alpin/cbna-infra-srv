version: "3.9"
# Source: https://github.com/kaleidos-ventures/taiga-docker/blob/main/docker-compose.yml

x-environment:
  &default-back-environment
  # These environment variables will be used by taiga-back and taiga-async.
  # Database settings
  POSTGRES_DB: "taiga"
  POSTGRES_USER: "${POSTGRES_USER}"
  POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
  POSTGRES_HOST: "taiga-db"
  # Taiga settings
  TAIGA_SECRET_KEY: "${SECRET_KEY}"
  TAIGA_SITES_SCHEME: "${TAIGA_SCHEME}"
  TAIGA_SITES_DOMAIN: "${TAIGA_DOMAIN}"
  TAIGA_SUBPATH: "${SUBPATH}"
  # Email settings.
  EMAIL_BACKEND: "django.core.mail.backends.${EMAIL_BACKEND}.EmailBackend"
  DEFAULT_FROM_EMAIL: "${EMAIL_DEFAULT_FROM}"
  EMAIL_USE_TLS: "${EMAIL_USE_TLS}"
  EMAIL_USE_SSL: "${EMAIL_USE_SSL}"
  EMAIL_HOST: "${EMAIL_HOST}"
  EMAIL_PORT: "${EMAIL_PORT}"
  EMAIL_HOST_USER: "${EMAIL_HOST_USER}"
  EMAIL_HOST_PASSWORD: "${EMAIL_HOST_PASSWORD}"
  # Rabbitmq settings
  RABBITMQ_USER: "${RABBITMQ_USER}"
  RABBITMQ_PASS: "${RABBITMQ_PASS}"
  # Telemetry settings
  ENABLE_TELEMETRY: "${ENABLE_TELEMETRY}"
  # ...your customizations go here

x-volumes:
  &default-back-volumes
  # These volumens will be used by taiga-back and taiga-async.
  - static-taiga-storage:/taiga-back/static
  - media-taiga-storage:/taiga-back/media
  # - ./config.py:/taiga-back/settings/config.py

services:
  taiga-db:
    image: postgres:12.3
    # https://hub.docker.com/_/postgres
    environment:
      POSTGRES_DB: "taiga"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 2s
      timeout: 15s
      retries: 5
      start_period: 3s
    networks:
      - taiga
    volumes:
      - db-taiga-storage:/var/lib/postgresql/data

  taiga-back:

    image: taigaio/taiga-back:6.7.0
    # https://hub.docker.com/r/taigaio/taiga-back
    depends_on:
      taiga-db:
        condition: service_healthy
      taiga-events-rabbitmq:
        condition: service_started
      taiga-async-rabbitmq:
        condition: service_started
    networks:
      - taiga
    environment: *default-back-environment
    volumes: *default-back-volumes

  taiga-async:
    image: taigaio/taiga-back:6.7.0
    # https://hub.docker.com/r/taigaio/taiga-back
    depends_on:
      taiga-db:
        condition: service_healthy
      taiga-events-rabbitmq:
        condition: service_started
      taiga-async-rabbitmq:
        condition: service_started
    networks:
      - taiga
    environment: *default-back-environment
    volumes: *default-back-volumes
    entrypoint: ["/taiga-back/docker/async_entrypoint.sh"]

  taiga-async-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    # https://hub.docker.com/_/rabbitmq
    hostname: "taiga-async-rabbitmq"
    networks:
      - taiga
    environment:
      RABBITMQ_ERLANG_COOKIE: "${RABBITMQ_ERLANG_COOKIE}"
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASS}"
      RABBITMQ_DEFAULT_VHOST: "${RABBITMQ_VHOST}"
    volumes:
      - async-rabbitmq-taiga-storage:/var/lib/rabbitmq

  taiga-front:
    image: taigaio/taiga-front:6.7.0
    # https://hub.docker.com/r/taigaio/taiga-front
    networks:
      - taiga
      - nginx-proxy
    environment:
      TAIGA_URL: "${TAIGA_SCHEME}://${TAIGA_DOMAIN}"
      TAIGA_WEBSOCKETS_URL: "${WEBSOCKETS_SCHEME}://${TAIGA_DOMAIN}"
      TAIGA_SUBPATH: "${SUBPATH}"
      # ...your customizations go here
    # volumes:
    #   - ./conf.json:/usr/share/nginx/html/conf.json

  taiga-events:
    image: taigaio/taiga-events:6.7.0
    # https://hub.docker.com/r/taigaio/taiga-events
    depends_on:
      taiga-events-rabbitmq:
        condition: service_started
    networks:
      - taiga
    environment:
      RABBITMQ_USER: "${RABBITMQ_USER}"
      RABBITMQ_PASS: "${RABBITMQ_PASS}"
      TAIGA_SECRET_KEY: "${SECRET_KEY}"

  taiga-events-rabbitmq:
    image: rabbitmq:3.8-management-alpine
    hostname: "taiga-events-rabbitmq"
    networks:
      - taiga
    environment:
      RABBITMQ_ERLANG_COOKIE: "${RABBITMQ_ERLANG_COOKIE}"
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASS}"
      RABBITMQ_DEFAULT_VHOST: "${RABBITMQ_VHOST}"
    volumes:
      - events-rabbitmq-taiga-storage:/var/lib/rabbitmq

  taiga-protected:
    image: taigaio/taiga-protected:6.7.0
    # https://hub.docker.com/r/taigaio/taiga-protected
    networks:
      - taiga
    environment:
      MAX_AGE: "${ATTACHMENTS_MAX_AGE}"
      SECRET_KEY: "${SECRET_KEY}"

  taiga-gateway:
    image: nginx:1.19-alpine
    depends_on:
      - taiga-front
      - taiga-back
      - taiga-events
    ports:
      - "9000:80"
    networks:
      - nginx-proxy
      - taiga
    environment:
      TZ: ${TZ:-Europe/Paris}
      VIRTUAL_HOST: "${DOMAIN_ALL}"
      LETSENCRYPT_HOST: "${DOMAIN_ALL}"
    volumes:
      - ./nginx/conf.d/taiga.conf:/etc/nginx/conf.d/default.conf
      - static-taiga-storage:/taiga/static
      - media-taiga-storage:/taiga/media

  taiga-manage:
    image: taigaio/taiga-back:6.7.0
    # Usage:
    # - create super-user:
    #   `docker compose run --rm taiga-manage createsuperuser`
    depends_on:
      - taiga-db
    networks:
      - taiga
    environment:
      POSTGRES_DB: "taiga"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST: "taiga-db"
      TAIGA_SECRET_KEY: "${SECRET_KEY}"
      RABBITMQ_USER: "${RABBITMQ_USER}"
      RABBITMQ_PASS: "${RABBITMQ_PASS}"
      CELERY_ENABLED: "False"
    volumes:
      - static-taiga-storage:/taiga-back/static
      - media-taiga-storage:/taiga-back/media
      # - ./config.py:/taiga-back/settings/config.py
    entrypoint: "python manage.py"

volumes:
  static-taiga-storage:
  media-taiga-storage:
  db-taiga-storage:
  async-rabbitmq-taiga-storage:
  events-rabbitmq-taiga-storage:

networks:
  taiga:
  nginx-proxy:
    external: true
