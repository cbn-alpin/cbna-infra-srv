x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: 4m
    max-file: 10

services:
  authentik-postgresql:
    image: docker.io/library/postgres:16-alpine
    container_name: authentik-postgresql
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${PG_PASS:?database password required}
      POSTGRES_USER: ${PG_USER:-authentik}
      POSTGRES_DB: ${PG_DB:-authentik}
    ports:
      - "${POSTGRES_HOST_IP-127.0.0.1}:${POSTGRES_HOST_PORT-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    logging: *default-logging
    volumes:
      - db-authentik-storage:/var/lib/postgresql/data
    #network_mode: none

  authentik-redis:
    image: docker.io/library/redis:alpine
    container_name: authentik-redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    logging: *default-logging
    volumes:
      - redis-authentik-storage:/data
    command: --save 60 1 --loglevel warning

  authentik-server:
    #image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2024.10.0}
    build:
      context: ./authentik/build
      dockerfile: Dockerfile
    image: cbna/authentik:2024.10.0
    container_name: authentik-server
    restart: unless-stopped
    depends_on:
      - authentik-postgresql
      - authentik-redis
    # WARNING: ports 9000 AND 9443 must be exposed for websocket to work properly
    expose:
      - 9000
      - 9443
    env_file:
      - .env
    environment:
      VIRTUAL_HOST: "${SITE_DOMAIN_ALL}"
      VIRTUAL_PORT: 9443
      VIRTUAL_PROTO: "https"
      LETSENCRYPT_HOST: "${SITE_DOMAIN_ALL}"
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    labels:
      com.github.nginx-proxy.nginx-proxy.keepalive: 10 
    logging: *default-logging
    volumes:
      - ./authentik/media:/media
      - ./authentik/custom-templates:/templates
      - ./authentik/dbip-city-lite-2023-10.mmdb:/geoip/GeoLite2-City.mmdb
    command: server

  authentik-worker:
    #image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2024.10.0}
    build:
      context: ./authentik/build
      dockerfile: Dockerfile
    image: cbna/authentik:2024.10.0
    container_name: authentik-worker
    restart: unless-stopped
    depends_on:
      - authentik-postgresql
      - authentik-redis
    env_file:
      - .env
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    logging: *default-logging
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./authentik/media:/media
      - ./authentik/certs:/certs
      - ./authentik/custom-templates:/templates
    command: worker

volumes:
  db-authentik-storage:
    driver: local
  redis-authentik-storage:
    driver: local

networks:
  default:
    name: nginx-proxy
    external: true
