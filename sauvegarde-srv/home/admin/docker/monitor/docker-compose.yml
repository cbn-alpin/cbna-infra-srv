version: "3.9"

services:
  monitor-influxdb:
    image: influxdb:2.2.0
    # https://hub.docker.com/_/influxdb
    container_name: monitor-influxdb
    restart: unless-stopped
    expose:
      - 8086
    hostname: ${HOSTNAME_INFLUXDB:-influxdb-cbna-infra}
    env_file:
      - ./influxdb/.env
    networks:
      - nginx-proxy
      - monitoring
    environment:
      VIRTUAL_HOST: influxdb.cbn-alpin.fr
      VIRTUAL_PORT: 8086
      LETSENCRYPT_HOST: influxdb.cbn-alpin.fr
    volumes:
      - influxdb-storage:/var/lib/influxdb/data
      - data-influxdb2-storage:/var/lib/influxdb2
      - conf-influxdb2-storage:/etc/influxdb2

  monitor-influx-cli:
    #  Initializes influxdb user/password/bucket...
    image: influxdb:2.2.0
    container_name: influx-cli
    env_file:
      - ./influxdb/.env
    networks:
      - monitoring
    depends_on:
      - monitor-influxdb
    command: sh -c 'sleep 5; influx setup
      --bucket "${INFLUXDB2_INIT_BUCKET}"
      --token "${INFLUXDB2_INIT_ADMIN_TOKEN}"
      --org "${INFLUXDB2_INIT_ORG}"
      --username=${INFLUXDB2_INIT_USERNAME}
      --password=${INFLUXDB2_INIT_PASSWORD}
      --host=http://monitor-influxdb:8086
      --force'

  monitor-telegraf:
    image: telegraf:1.23.0
    # https://hub.docker.com/_/telegraf
    container_name: monitor-telegraf
    env_file:
      - ./influxdb/.env
      - ./telegraf/.env
    hostname: ${HOSTNAME:-sauvegarde}
    restart: unless-stopped
    depends_on:
      - monitor-influxdb
    networks:
      - monitoring
    # To authorize telgraf to access to /run/docker.sock set host docker gid
    # Find docker gid with: stat -c '%g' /var/run/docker.sock
    # Or run docker-compose like this:
    user: "telegraf:${DOCKER_GID:-997}"
    environment:
      HOST_PROC: /host/proc
      HOST_SYS: /host/sys
      HOST_ETC: /host/etc
      INFLUXDB2_INIT_ORG: ${INFLUXDB2_INIT_ORG}
      INFLUXDB2_INIT_BUCKET: ${INFLUXDB2_INIT_BUCKET}
      INFLUXDB2_TELEGRAF_TOKEN: ${INFLUXDB2_TELEGRAF_TOKEN}
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /:/host:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/srvstatus/status.json:/opt/srvstatus/status.json

  monitor-grafana:
    image: grafana/grafana:8.5.6
    # https://hub.docker.com/r/grafana/grafana
    container_name: monitor-grafana
    restart: unless-stopped
    expose:
      - 3000
    env_file:
      - ./grafana/.env
    depends_on:
      - monitor-influxdb
    networks:
      - nginx-proxy
      - monitoring
    environment:
      VIRTUAL_HOST: monitor.cbn-alpin.fr
      VIRTUAL_PORT: 3000
      LETSENCRYPT_HOST: monitor.cbn-alpin.fr
    volumes:
      - grafana-storage:/var/lib/grafana

  monitor-grafana-renderer:
    image: grafana/grafana-image-renderer:3.4.2
    # https://hub.docker.com/r/grafana/grafana-image-renderer
    container_name: monitor-grafana-renderer
    restart: unless-stopped
    expose:
      - 8081
    environment:
      ENABLE_METRICS: 'true'
    networks:
      - monitoring

  monitor-grafana-backup:
    image: ysde/docker-grafana-backup-tool:1.2.3
    # https://hub.docker.com/r/ysde/docker-grafana-backup-tool
    container_name: monitor-grafana-backup
    restart: "no"
    depends_on:
      - monitor-grafana
    networks:
      - nginx-proxy
      - monitoring
    environment:
      - GRAFANA_TOKEN=${GRAFANA_TOKEN}
      - GRAFANA_URL=http://monitor-grafana:3000
    volumes:
       - ./grafana/backup:/opt/grafana-backup-tool/_OUTPUT_

volumes:
  grafana-storage:
  influxdb-storage:
  data-influxdb2-storage:
  conf-influxdb2-storage:

networks:
  nginx-proxy:
    external: true
  monitoring:
